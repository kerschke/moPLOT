% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/computeCumulatedPathLengths.R
\name{computeCumulatedPathLengths}
\alias{computeCumulatedPathLengths}
\title{Compute the Cumulated Path Lengths.}
\usage{
computeCumulatedPathLengths(
  centers,
  gradients,
  local.efficient.ids = numeric(0),
  prec.vector.length = 0.001,
  prec.norm = 1e-06,
  cumulate.gradient.length = TRUE,
  fix.diagonals = FALSE,
  check.data = TRUE
)
}
\arguments{
\item{centers}{\link{\code{\link{matrix}}}\cr
Matrix containing the points of a grid of cells, for which the lengths of cumulated
gradient paths should be computed. Each row corresponds to a single point.}

\item{gradients}{\link{\code{\link{matrix}}}\cr
Matrix containing the multi-objective gradients for each point of \code{centers}.}

\item{prec.vector.length}{\link{\code{\link{numeric}(1L)}}\cr
Precision value (= threshold) for the length of the multi-objective gradient.
Based on this threshold, the function will classify the corresponding point
as locally efficient (or not). The default value is \code{1e-3}.}

\item{prec.norm}{\link{\code{\link{numeric}(1L)}}\cr
Precision threshold when normalizing a vector. That is, every element of the vector,
whose absolute value is below this threshold, will be replaced by 0.
The default is \code{1e-6}.}

\item{check.data}{\link{\code{\link{logical}(1L)}}\cr
Should sanity checks be performed? The default is \code{TRUE}. Note that the checks
should only be turned off (e.g., for a slight speed up), if you are sure that you
provide the input data in the correct format.}
}
\value{
\link{\code{\link{data.frame}}}\cr
Returns a \code{data.frame}, which appends the cumulated path lengths to the points
provided by \code{centers}.
}
\description{
Given a grid of points in the search space, along with their corresponding
multi-objective gradients, this function will compute (for each point of the grid)
the length of the cumulated path from a point towards its attracting local
efficient point.
}
\note{
ATTENTION: Only turn off the sanity checks (\code{check.data = FALSE}),
if you can ensure that all input parameters are provided in the correct format.
}
\examples{
# Define two single-objective test problems:
fn1 = function(x) sum((x - c(0.2, 1))^2)
fn2 = function(x) sum((x - c(0.5, 0.5))^2)

# Define a grid of points:
points = as.matrix(expand.grid(x1 = seq(0, 0.7, 0.005), x2 = seq(0, 1.25, 0.005)))

# Compute the corresponding gradients:
gradients = computeGradientField(points, fn1, fn2)

# Now, compute the cumulated path lengths:
x = computeCumulatedPathLengths(points, gradients)

# Finally, we can visualize the resulting multi-objective "landscape":
ggplotHeatmap(x, hide.legend = TRUE)
}
